// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}
//title, couponCode, expireDate
model Coupon{
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  title String
  couponCode String
  expireDate DateTime
  isActive   Boolean
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model Banner {
    id       String    @id @default(auto()) @map("_id") @db.ObjectId
     title String
     link String
     imageUrl String
    isActive Boolean
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Category {
      id       String    @id @default(auto()) @map("_id") @db.ObjectId
      title String
      slug String @unique
      imageUrl String?
      description String?
      isActive Boolean

      products  Product[]  
      trainings Training[]

      createdAt DateTime  @default(now())
      updatedAt DateTime? @updatedAt
}

model Product {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  title       String   
  slug       String    @unique
  description String?
  imageUrl String?
  isActive Boolean
  sku String?
  barcode String?
  productPrice Float
  productSalePrice Float
  tags String[]
  isWholesale Boolean
  productCode String?
  unit String?
  wholesalePrice Float
  wholesaleQty Int
  productStock Int
  qty Int
  
  categories   Category  @relation(fields: [categoryId], references: [id])
  categoryId String @db.ObjectId

  createdAt  DateTime  @default(now())
  updatedAt  DateTime? @updatedAt

}

model Training{
   id       String    @id @default(auto()) @map("_id") @db.ObjectId
  title    String
  slug    String @unique
  imageUrl    String?
  description    String?
  content    String?
  isActive   Boolean

  categories   Category  @relation(fields: [categoryId], references: [id])
  categoryId String @db.ObjectId

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}

enum UserRole{
  ADMIN
  MODERATOR
  CUSTOMER
}
  

model User {
     id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  password      String
  emailVerified DateTime?

  role          UserRole @default(CUSTOMER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}
